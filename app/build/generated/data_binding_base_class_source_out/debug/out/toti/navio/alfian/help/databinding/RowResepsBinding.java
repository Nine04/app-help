// Generated by view binder compiler. Do not edit!
package toti.navio.alfian.help.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import toti.navio.alfian.help.R;

public final class RowResepsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout cLReseps;

  @NonNull
  public final ImageView imgResepsRow;

  @NonNull
  public final TextView txEmailResepsRow;

  @NonNull
  public final TextView txHpResepsRow;

  @NonNull
  public final TextView txIdResepsRow;

  @NonNull
  public final TextView txNamaResepsRow;

  private RowResepsBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout cLReseps,
      @NonNull ImageView imgResepsRow, @NonNull TextView txEmailResepsRow,
      @NonNull TextView txHpResepsRow, @NonNull TextView txIdResepsRow,
      @NonNull TextView txNamaResepsRow) {
    this.rootView = rootView;
    this.cLReseps = cLReseps;
    this.imgResepsRow = imgResepsRow;
    this.txEmailResepsRow = txEmailResepsRow;
    this.txHpResepsRow = txHpResepsRow;
    this.txIdResepsRow = txIdResepsRow;
    this.txNamaResepsRow = txNamaResepsRow;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowResepsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowResepsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_reseps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowResepsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout cLReseps = (ConstraintLayout) rootView;

      id = R.id.img_reseps_row;
      ImageView imgResepsRow = ViewBindings.findChildViewById(rootView, id);
      if (imgResepsRow == null) {
        break missingId;
      }

      id = R.id.tx_email_reseps_row;
      TextView txEmailResepsRow = ViewBindings.findChildViewById(rootView, id);
      if (txEmailResepsRow == null) {
        break missingId;
      }

      id = R.id.tx_hp_reseps_row;
      TextView txHpResepsRow = ViewBindings.findChildViewById(rootView, id);
      if (txHpResepsRow == null) {
        break missingId;
      }

      id = R.id.tx_id_reseps_row;
      TextView txIdResepsRow = ViewBindings.findChildViewById(rootView, id);
      if (txIdResepsRow == null) {
        break missingId;
      }

      id = R.id.tx_nama_reseps_row;
      TextView txNamaResepsRow = ViewBindings.findChildViewById(rootView, id);
      if (txNamaResepsRow == null) {
        break missingId;
      }

      return new RowResepsBinding((ConstraintLayout) rootView, cLReseps, imgResepsRow,
          txEmailResepsRow, txHpResepsRow, txIdResepsRow, txNamaResepsRow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
